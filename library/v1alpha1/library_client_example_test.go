// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go_gapic. DO NOT EDIT.

package library_test

import (
	"context"

	library "github.com/animeapis/api-go-client/library/v1alpha1"
	librarypb "github.com/animeapis/go-genproto/library/v1alpha1"
	"google.golang.org/api/iterator"
)

func ExampleNewClient() {
	ctx := context.Background()
	c, err := library.NewClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Use client.
	_ = c
}

func ExampleClient_GetPlaylist() {
	ctx := context.Background()
	c, err := library.NewClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	req := &librarypb.GetPlaylistRequest{
		// TODO: Fill request struct fields.
		// See https://pkg.go.dev/github.com/animeapis/go-genproto/library/v1alpha1#GetPlaylistRequest.
	}
	resp, err := c.GetPlaylist(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleClient_ListPlaylists() {
	ctx := context.Background()
	c, err := library.NewClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	req := &librarypb.ListPlaylistsRequest{
		// TODO: Fill request struct fields.
		// See https://pkg.go.dev/github.com/animeapis/go-genproto/library/v1alpha1#ListPlaylistsRequest.
	}
	it := c.ListPlaylists(ctx, req)
	for {
		resp, err := it.Next()
		if err == iterator.Done {
			break
		}
		if err != nil {
			// TODO: Handle error.
		}
		// TODO: Use resp.
		_ = resp
	}
}

func ExampleClient_CreatePlaylist() {
	ctx := context.Background()
	c, err := library.NewClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	req := &librarypb.CreatePlaylistRequest{
		// TODO: Fill request struct fields.
		// See https://pkg.go.dev/github.com/animeapis/go-genproto/library/v1alpha1#CreatePlaylistRequest.
	}
	resp, err := c.CreatePlaylist(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleClient_UpdatePlaylist() {
	ctx := context.Background()
	c, err := library.NewClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	req := &librarypb.UpdatePlaylistRequest{
		// TODO: Fill request struct fields.
		// See https://pkg.go.dev/github.com/animeapis/go-genproto/library/v1alpha1#UpdatePlaylistRequest.
	}
	resp, err := c.UpdatePlaylist(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleClient_DeletePlaylist() {
	ctx := context.Background()
	c, err := library.NewClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	req := &librarypb.DeletePlaylistRequest{
		// TODO: Fill request struct fields.
		// See https://pkg.go.dev/github.com/animeapis/go-genproto/library/v1alpha1#DeletePlaylistRequest.
	}
	err = c.DeletePlaylist(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
}

func ExampleClient_ListPlaylistItems() {
	ctx := context.Background()
	c, err := library.NewClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	req := &librarypb.ListPlaylistItemsRequest{
		// TODO: Fill request struct fields.
		// See https://pkg.go.dev/github.com/animeapis/go-genproto/library/v1alpha1#ListPlaylistItemsRequest.
	}
	it := c.ListPlaylistItems(ctx, req)
	for {
		resp, err := it.Next()
		if err == iterator.Done {
			break
		}
		if err != nil {
			// TODO: Handle error.
		}
		// TODO: Use resp.
		_ = resp
	}
}

func ExampleClient_CreatePlaylistItem() {
	ctx := context.Background()
	c, err := library.NewClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	req := &librarypb.CreatePlaylistItemRequest{
		// TODO: Fill request struct fields.
		// See https://pkg.go.dev/github.com/animeapis/go-genproto/library/v1alpha1#CreatePlaylistItemRequest.
	}
	resp, err := c.CreatePlaylistItem(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleClient_BatchCreatePlaylistItems() {
	ctx := context.Background()
	c, err := library.NewClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	req := &librarypb.BatchCreatePlaylistItemsRequest{
		// TODO: Fill request struct fields.
		// See https://pkg.go.dev/github.com/animeapis/go-genproto/library/v1alpha1#BatchCreatePlaylistItemsRequest.
	}
	resp, err := c.BatchCreatePlaylistItems(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleClient_DeletePlaylistItem() {
	ctx := context.Background()
	c, err := library.NewClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	req := &librarypb.DeletePlaylistItemRequest{
		// TODO: Fill request struct fields.
		// See https://pkg.go.dev/github.com/animeapis/go-genproto/library/v1alpha1#DeletePlaylistItemRequest.
	}
	err = c.DeletePlaylistItem(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
}
